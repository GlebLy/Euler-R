  dfm <- euclidovoSitoDelitelej(m);
  x <- rbind(dfn, dfm);
  x <- aggregate(x$N, by=list(prime=x$p), FUN=sum);
   return(prod(df$N+1));
}
euclidovoSitoDelitelej(1)
countDiv(1,1)
countDiv(1,3)
kolDelitelej(1)
kolDelitelej(2)
kolDelitelej(3)
kolDelitelej(4)
kolDelitelej(5)
kolDelitelej(6)
euclidovoSitoDelitelej(1)
euclidovoSitoDelitelej(2)
euclidovoSitoDelitelej(3)
euclidovoSitoDelitelej(4)
euclidovoSitoDelitelej(5)
euclidovoSitoDelitelej(6)
euclidovoSitoDelitelej(10)
euclidovoSitoDelitelej(15)
euclidovoSitoDelitelej(21)
euclidovoSitoDelitelej(28)
countDiv(1,1)
countDiv(1,3)
euclidovoSitoDelitelej(3)
euclidovoSitoDelitelej(1)
n=1
m=3
dfn <- euclidovoSitoDelitelej(n);
  dfm <- euclidovoSitoDelitelej(m)
dfn
dfm
x <- rbind(dfn, dfm);
x
x <- aggregate(x$N, by=list(prime=x$p), FUN=sum);
x
df$N+1
prod(df$x+1)
options(max.print = .Machine$integer.max)
Ndelitelej <- function(predel, l){
  count <- rep(0,length(l));
  for (i in 1:length(l)){
    while (predel%%l[i]==0){
      count[i] <- count[i] + 1;
      predel <- predel/l[i];
      #print(paste0("индикатор=", i, " ,Делимое=",predel, " ,Count=", count[i]));
    }
  }
  return(count);
}
euclidovoSitoDelitelej <- function(predel){
  if (predel<2){
    return(data.frame(prime = 1, Ndelitelej = 0));
  }else if (predel == 2) {
    return(data.frame(prime = 2, Ndelitelej = 1));
   } else {
    l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i] , l[!l%%l[i]==0]);
      i <- i + 1;
    }
    l <- l[predel%%l==0];
    df <- data.frame(prime = l, Ndelitelej = Ndelitelej(predel,l));
 }
 return(df);
}
countDiv <- function(n,m){
  dfn <- euclidovoSitoDelitelej(n);
  dfm <- euclidovoSitoDelitelej(m);
  x <- rbind(dfn, dfm);
  Ndelitelej <- aggregate(x$N, by=list(prime=x$p), FUN=sum);
   return(prod(df$N+1));
}
euclidovoSitoDelitelej(1)
countDiv(1,1)
countDiv(1,3)
euclidovoSitoDelitelej(3)
n
m
  dfn <- euclidovoSitoDelitelej(n);
  dfm <- euclidovoSitoDelitelej(m);
  x <- rbind(dfn, dfm);
x
Ndelitelej <- aggregate(x$N, by=list(prime=x$p), FUN=sum);
x
prod(df$N+1)
prod(x$N+1)
dfn <- euclidovoSitoDelitelej(n);
  dfm <- euclidovoSitoDelitelej(m);
  df <- rbind(dfn, dfm);
  Ndelitelej <- aggregate(df$N, by=list(prime=df$p), FUN=sum);
df
prod(df$N+1)
options(max.print = .Machine$integer.max)
Ndelitelej <- function(predel, l){
  count <- rep(0,length(l));
  for (i in 1:length(l)){
    while (predel%%l[i]==0){
      count[i] <- count[i] + 1;
      predel <- predel/l[i];
      #print(paste0("индикатор=", i, " ,Делимое=",predel, " ,Count=", count[i]));
    }
  }
  return(count);
}
euclidovoSitoDelitelej <- function(predel){
  if (predel<2){
    return(data.frame(prime = 1, Ndelitelej = 0));
  }else if (predel == 2) {
    return(data.frame(prime = 2, Ndelitelej = 1));
   } else {
    l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i] , l[!l%%l[i]==0]);
      i <- i + 1;
    }
    l <- l[predel%%l==0];
    df <- data.frame(prime = l, Ndelitelej = Ndelitelej(predel,l));
 }
 return(df);
}
countDiv <- function(n,m){
  dfn <- euclidovoSitoDelitelej(n);
  dfm <- euclidovoSitoDelitelej(m);
  df <- rbind(dfn, dfm);
  Ndelitelej <- aggregate(df$N, by=list(prime=df$p), FUN=sum);
   return(prod(df$N+1));
}
par <- function(n){
  if(n%%2==0)return(T);
  return(F);
}
kolDelitelej <- function(i){
  if(par(i)){
    n <- i/2;
    m <- i + 1;
  }else{
    m <- i;
    n <- (i + 1)/2;
  }
  countDiv(n, m);
}
kolDelitelej(1)
kolDelitelej(2)
kolDelitelej(3)
kolDelitelej(4)
kolDelitelej(5)
kolDelitelej(6)
kolDelitelej(7)
options(max.print = .Machine$integer.max)
Ndelitelej <- function(predel, l){
  count <- rep(0,length(l));
  for (i in 1:length(l)){
    while (predel%%l[i]==0){
      count[i] <- count[i] + 1;
      predel <- predel/l[i];
      #print(paste0("индикатор=", i, " ,Делимое=",predel, " ,Count=", count[i]));
    }
  }
  return(count);
}
euclidovoSitoDelitelej <- function(predel){
  if (predel<2){
    return(data.frame(prime = 1, Ndelitelej = 0));
  }else if (predel == 2) {
    return(data.frame(prime = 2, Ndelitelej = 1));
   } else {
    l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i] , l[!l%%l[i]==0]);
      i <- i + 1;
    }
    l <- l[predel%%l==0];
    df <- data.frame(prime = l, Ndelitelej = Ndelitelej(predel,l));
 }
 return(df);
}
countDiv <- function(n,m){
  dfn <- euclidovoSitoDelitelej(n);
  dfm <- euclidovoSitoDelitelej(m);
  df <- rbind(dfn, dfm);
  Ndelitelej <- aggregate(df$N, by=list(prime=df$p), FUN=sum);
   return(prod(df$N+1));
}
par <- function(n){
  if(n%%2==0)return(T);
  return(F);
}
kolDelitelej <- function(i){
  if(par(i)){
    n <- i/2;
    m <- i + 1;
  }else{
    m <- i;
    n <- (i + 1)/2;
  }
  countDiv(n, m);
}
triugolnoe <- function(i)i*(i+1)/2;
df <- data.frame(i=1:12500);
df$triugolnoe = triugolnoe(df$i);
df$kolDelitelej = sapply(df$i, kolDelitelej);
df$mnogoDelitelej = df$kolDelitelej >= 500;
subset(df, mnogoDelitelej == T);
subset(df, kolDelitelej > 400);
write.csv(df, file = "triugolnoeYkolDelitelBest.csv");
df
subset(df, kolDelitelej > 400);
q()
collatz <- function(n){
  i <- 1;
  m <- 0;
  mp <- 0;
  j <- 1;
  while (n != 1){
    if (n %% 2 == 0){
      n <- n/2;
      m[i] <- n;
    }else{
      if (isPrime(n)){
        mp[j] <- n;
        j <- j + 1;
      }
      n <- 3*n + 1;
      m[i]  <- n;
    }
    i <- i + 1;
   }
  return(mp);
}
isPrime <- function(x){
  if(x<2){
    return(FALSE);
  }else{
    flag <- 2;
    while (flag<x){
      if(x%%flag==0){
        return(FALSE);
        }
      flag <- flag + 1;
     }
     return(TRUE);
   }
}
seqCollatz <- function(predel){
  df <- data.frame(prime = 1, dlina = 0);
  j <- 1;
  while (j < predel){
    if (isPrime(j)){
      ms <- collatz(j);
      print(ms);
      dfnew <- data.frame(prime = j, dlina = length(ms));
      df <- rbind(df,dfnew);
    }
    j <- j + 1;
   }
 return(df);
}
seqCollatz(200)
subset(df, dlina >20)
df$dlina
df
df<-seqCollatz(200)
df
df$dl
df$dl>20
df[df$dl>20]
subset(df, dlina >20)
collatz(109)
collatz(193)
collatz(199)
collatz <- function(n){
  i <- 1;
  m <- 0;
  mp <- 0;
  j <- 1;
  while (n != 1){
    if (n %% 2 == 0){
      n <- n/2;
      m[i] <- n;
    }else{
      if (isPrime(n)){
        mp[j] <- n;
        j <- j + 1;
      }
      n <- 3*n + 1;
      m[i]  <- n;
    }
    i <- i + 1;
   }
  return(mp);
}
isPrime <- function(x){
  if(x<2){
    return(FALSE);
  }else{
    flag <- 2;
    while (flag<x){
      if(x%%flag==0){
        return(FALSE);
        }
      flag <- flag + 1;
     }
     return(TRUE);
   }
}
euclidovoSitoCol <- function(predel){
  if (predel<2){
    return(data.frame(prime = 1, Nd = 0));
  }else if (predel == 2) {
    return(data.frame(prime = 2, Nd = 1));
   } else {
    l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i], l[!l%%l[i]==0]);
      i <- i + 1;
    }
    l <- l[predel%%l==0];
    df <- data.frame(prime = l, Nd = collatz(predel));
 }
 return(df);
}
seqCollatz <- function(predel){
  df <- data.frame(prime = 1, dlina = 0);
  j <- 1;
  while (j < predel){
    if (isPrime(j)){
      ms <- collatz(j);
      print(ms);
      dfnew <- data.frame(prime = j, dlina = length(ms));
      df <- rbind(df,dfnew);
    }
    j <- j + 1;
   }
 return(df);
}
df <- seqCollatz(200)
subset(df, dlina > 20)
euclidovoSitoCol(200)
collatz <- function(n){
  i <- 1;
  m <- 0;
  mp <- 0;
  j <- 1;
  while (n != 1){
    if (n %% 2 == 0){
      n <- n/2;
      m[i] <- n;
    }else{
      if (isPrime(n)){
        mp[j] <- n;
        j <- j + 1;
      }
      n <- 3*n + 1;
      m[i]  <- n;
    }
    i <- i + 1;
   }
  return(mp);
}
isPrime <- function(x){
  if(x<2){
    return(FALSE);
  }else{
    flag <- 2;
    while (flag<x){
      if(x%%flag==0){
        return(FALSE);
        }
      flag <- flag + 1;
     }
     return(TRUE);
   }
}
euclidovoSitoCol <- function(predel){
  if (predel<2){
    return(data.frame(prime = 1, Nd = 0));
  }else if (predel == 2) {
    return(data.frame(prime = 2, Nd = 1));
   } else {
    l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i], l[!l%%l[i]==0]);
      i <- i + 1;
    }
    l <- l[predel%%l==0];
    df <- data.frame(prime = l, Nd = length(collatz(predel)));
 }
 return(df);
}
seqCollatz <- function(predel){
  df <- data.frame(prime = 1, dlina = 0);
  j <- 1;
  while (j < predel){
    if (isPrime(j)){
      ms <- collatz(j);
      print(ms);
      dfnew <- data.frame(prime = j, dlina = length(ms));
      df <- rbind(df,dfnew);
    }
    j <- j + 1;
   }
 return(df);
}
df <- seqCollatz(200)
subset(df, dlina > 20)
euclidovoSitoCol(200)
predel = 200
  l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i], l[!l%%l[i]==0]);
      i <- i + 1;
    }
l
  l <- l[predel%%l==0];
l
  df <- data.frame(prime = l, Nd = length(collatz(predel)));
df
  l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i], l[!l%%l[i]==0]);
      i <- i + 1;
    }
  
    df <- data.frame(prime = l, Nd = length(collatz(predel)));
df
collatz <- function(n){
  i <- 1;
  m <- 0;
  mp <- 0;
  j <- 1;
  while (n != 1){
    if (n %% 2 == 0){
      n <- n/2;
      m[i] <- n;
    }else{
      if (isPrime(n)){
        mp[j] <- n;
        j <- j + 1;
      }
      n <- 3*n + 1;
      m[i]  <- n;
    }
    i <- i + 1;
   }
  return(mp);
}
isPrime <- function(x){
  if(x<2){
    return(FALSE);
  }else{
    flag <- 2;
    while (flag<x){
      if(x%%flag==0){
        return(FALSE);
        }
      flag <- flag + 1;
     }
     return(TRUE);
   }
}
euclidovoSitoCol <- function(predel){
  if (predel<2){
    return(data.frame(prime = 1, Nd = 0));
  }else if (predel == 2) {
    return(data.frame(prime = 2, Nd = 1));
   } else {
    l <- 2:predel;
    i <- 1;
    while ( l[i] < sqrt(predel) ){
      l <- c(l[i], l[!l%%l[i]==0]);
      i <- i + 1;
    }
    i <- 2;
    df <- data.frame(prime = 2, Nd = 1);
    while (i < length(l)){
      dfnew <- data.frame(prime = l, Nd = length(collatz(predel)));
      df <- rbind(df,dfnew);
      i <- i + 1;
     }
   }
 return(df);
}
seqCollatz <- function(predel){
  df <- data.frame(prime = 1, dlina = 0);
  j <- 1;
  while (j < predel){
    if (isPrime(j)){
      ms <- collatz(j);
      print(ms);
      dfnew <- data.frame(prime = j, dlina = length(ms));
      df <- rbind(df,dfnew);
    }
    j <- j + 1;
   }
 return(df);
}
df <- seqCollatz(200)
subset(df, dlina > 20)
euclidovoSitoCol(200)
df<-0
df
q()
